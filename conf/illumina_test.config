/*
 * -------------------------------------------------
 *  Nextflow test config file for processes options
 * -------------------------------------------------
 * Defines general paths for input files and
 * parameters for samba processes
 */

params {

    /* --------------------
     *  General parameters
     * --------------------
     */

    // Analyzed project name
    projectName = "samba_illumina_test"
    // Output directory to publish workflow results
    outdir = "${baseDir}/results/${projectName}"

    // Input parameters
    // sample file must be in XLS format
    excel_sample_file = "${baseDir}/training_dataset/illumina/illumina_sample_file.xls"
   
    // Type of data
    data_type = "illumina"
    singleEnd = false

    /* -----------------------------
     *  Data integrity process
     * -----------------------------
     */
    data_integrity_enable = true

    /* -----------------------------
     *  Cutadapt process parameters
     * -----------------------------
     * Optional process to remove
     * primers from raw reads
     */

    //Activation
    cutadapt_enable = true

    //Set your forward and reverse primers
    primerF = "ACGGRAGGCAGCAG"
    primerR = "TACCAGGGTATCTAATCCT"

    //Error rate (default = 0.1)
    errorRate = "0.1"

    /* -----------------------------
     *  FIGARO process parameters
     * -----------------------------
     * Optional and only for paired-end
     * data
     */

    //Activation (ONLY FOR PAIRED-END DATA)
    figaro_enable = true

    //Set the path to your directory containing raw data FASTQ
    raw_data_dir = "${baseDir}/training_dataset/illumina/dna-sequence-raw"

    //Set the size of expected amplicons
    amplicon_length = "410"

   /* --------------------------------------------------------
     *  DADA2 process parameters
     * --------------------------------------------------------
     * Infers exact amplicon sequence variants (ASVs)
     * Set quality trimming parameters to fit to your data
     * You can use the optimal parameters identified by FIGARO
     */

    //Remove the first n bases of each reads ( default = 0 -> no removal)
    FtrimLeft = "0"
    RtrimLeft = "0"

    //Length at which to trim reads. Remove bases after this length ( default = 0 -> no trimming)
    FtruncLen = "0"
    RtruncLen = "215"

    //Minium allowed base quality (default = 2)
    truncQ = "2"

    //Max error rate allowed for reads (default = 2)
    FmaxEE = "3"
    RmaxEE = "3"

    //The number of reads to use when training the error model.
    //Smaller numbers will result in a shorter run time but a less reliable error model.
    n_read_learn = "1000000"

    //Method used to pool samples for denoising. Choices: 'independent' (default) or 'pseudo'
    //see DADA2 documentation for more explanation
    pooling_method = "independent"

    //Method used to identify and remove chimeras. Choices: 'consensus' (default), 'none' or 'pooled'
    //see DADA2 documentation for more explanation
    chimeras_method = "consensus"

    /* -------------------------------------
     *  swarm ASV clustering
     * -------------------------------------
     */

    //Activation
    swarm_clustering_enable = false

    /* -------------------------------------
     *  dbOTU3 process parameters
     * -------------------------------------
     * Optional process to cluster
     * ASV based on phylogeny, distribution
     * and abundance criterions
     */

    //Activation
    dbotu3_enable = true

    /* -------------------------------------
     *  ASV taxonomic assignation using
     *  QIIME2 RDP-like program
     * -------------------------------------
     * pre-formatted databases can be download here:
     * ftp://ftp.ifremer.fr/ifremer/dataref/bioinfo/sebimer/sequence-set/SAMBA/v4/taxonomic-databases/
     */

    //Path to a trained Naive Bayes QIIME 2 classifier
    database = "${baseDir}/tax.databases.test/illumina/SILVA_v138.1_ref_V3-V4_PCR1F460-PCR1R460_GenoToul.qza"

    /* -------------------------------------
     *  Filter ASV table and ASV sequences
     *  based on the taxonomic assignation
     * -------------------------------------
     */

    //Activation
    filter_table_by_tax_enable = true

    //Type of filtering : 'exclude' if you want to exclude some taxa or 'include' if you want to keep only some taxa
    filtering_type = "exclude"

    //List of taxa you want to filter (comma separated list).
    tax_to_filter = "Archaea,Chloroplast"

    /* ---------------------------------------
     *  Filter ASV table and ASV sequences
     *  based on the data
     * ---------------------------------------
     * sample ID and/or frequency/contingency
     */

    //Global activation
    filter_table_by_data_enable = false

    //Filtering based on SampleID
        //Activation
        filter_by_id = false

        //list of samples to remove (comma separated list)
        list_sample_to_remove = ""

    //Filtering based on frequency/contingency
        //Activation
        filter_by_frequency = false

        //Minimum desired total sequence count within each sample
        min_frequency_sample = "1"

        //Minimum desired abundance for each ASV
        min_frequency_asv = "1"

        //Minimum number of samples in which an ASV must be found to be kept
        contingency_asv = "1"

    /* -------------------------------------
     *  Decontamination step using
     *  microDecon R package
     * -------------------------------------
     * Remove contaminant ASVs based on
     * their frequency both in control
     * sample(s) and biological samples
     */

    //Activation
    filter_contaminants_enable = false

    //List of control samples e.g.: "control1" or "control1,control2"
    list_control_samples = ""

    /* -------------------------------------
     *  Differential abundance analysis
     *  using ANCOM-BC
     * -------------------------------------
     */

    //Activation
    ancombc_enable = true

    //Set to true ff you want to use custom categorical group as reference to identify differential abundances
    //otherwise the first value of the variable(s) tested will be taken as a reference
    use_custom_reference = false
        //Custom sample group value to use as reference. Syntax: "column_name::column_value"
        reference_level = ""

    //Variable to analyse for differential abundance
    //can be one variable: "column_name"
    //can be several variables to be analyse separately: "column_name_1,column_name2,..."
    //can be several variables to be analyse in interaction: "'column_name_1 + column_name2'"
    ancombc_formula = "bird_species,sample_location"

    //Statistical parameters
        //method for adjusted pvalue
        p_adj_method = "holm"

        //number of iterations for the E-M algorithm
        max_iter = "100"

        //significant pvalue threshold
        alpha = "0.05"

    /* -------------------------------------
     *  Functional predictions using
     *  PICRUSt2
     * -------------------------------------
     * Only for 16S analysis
     */

    //Activation
    picrust2_enable = true

    //Gene families to predict. Can be: COG, EC, KO, PFAM, TIGRFAM
    traits_db = "EC,KO,COG,PFAM"

    //Max nsti value accepted. By default: NSTI cut-off of 2 should eliminate junk sequences
    nsti = "0.2"

    //HSP method of your choice. By default: 'mp' the most accurate prediction method. Faster method: 'pic'
    hsp_method = "mp"

    //Minimum number of reads across all samples for each input ASV
    min_reads = "10"

    //Minimum number of samples that an ASV needs to be identfied within
    min_samples = "1"

    //Variables of interest (comma separated list)
    picrust2_tested_variable = "bird_species"

    /* -----------------------------
     *  Statistical analyses
     * -----------------------------
     */

    // Variable(s) to test for alpha and beta diversity
    //can be one variable: "varname"
    //can be several variables to be analyse separately: "varname1,varname2,..."
    stat_var = "bird_species"

    // Number of taxa to represent
    taxa_nb = "10"

}
